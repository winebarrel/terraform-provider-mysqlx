# This GitHub action can publish assets for release when a tag is created.
# Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
#
# This uses an action (crazy-max/ghaction-import-gpg@v5) that assumes you set your
# private key in the `gpg_private_key` secret and passphrase in the `passphrase`
# secret. If you would rather own your own GPG handling, please fork this action
# or use an alternative one for key handling.
#
# You will need to pass the `--batch` flag to `gpg` in your signing step
# in `goreleaser` to indicate this is being used in a non-interactive mode.
#
name: release
on:
  push:
    tags:
      - 'v*'
    branches:
      - 'feature/add-complex-grants-support'
jobs:
  goreleaser:
    runs-on: tf-registry-provider-mysql
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Unshallow
        run: git fetch --prune --unshallow
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      -
        name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      # -
      #   name: Run GoReleaser
      #   uses: goreleaser/goreleaser-action@v3
      #   with:
      #     version: latest
      #     args: release
      #   env:
      #     GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
      #     GITHUB_TOKEN: ${{ secrets.TOKEN }}
      -
        name: Test ref name
        run: echo ${{github.ref_name}}
      # -
      #   name: Publish provider
      #   run: /home/ec2-user/citizen-linux-x64 provider --registry http://localhost:3000 stable mysql ${{ steps.module-version.outputs.data }}
      #   working-directory: dist
